'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports Infoware.Reglas.General



#Region "ItemxBodega"
Public Class ItemxBodega

  Const _Procedimiento As String = "proc_ItemxBodega"



  Private mItem As Item = Nothing

  Private mBodega As Bodega = Nothing

  Public Sub New(ByVal _Item As Item, ByVal _EsNuevo As Boolean)
    MyBase.New()
    Item = _Item
    OperadorDatos = _Item.OperadorDatos
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _Item As Item, ByVal _Bodega As Bodega)
    Me.New(_Item, False)
    Bodega = _Bodega
    If Me.Recargar Then
    Else
      Throw New System.Exception("No se puede cargar objeto ItemxBodega")
    End If
  End Sub

  'Item
  Public Overridable Property Item() As Item
    Get
      If Me.mItem Is Nothing AndAlso Item_Codigo > 0 Then
        Me.mItem = New Item(OperadorDatos, Item_Codigo)
      End If
      Return Me.mItem
    End Get
    Set(ByVal value As Item)
      Me.mItem = value
      Item_Codigo = value.Item_Codigo
    End Set
  End Property

  'Bodega
  Public Overridable Overloads Property Bodega() As Bodega
    Get
      If Me.mBodega Is Nothing AndAlso Bodega_Codigo > 0 Then
        Me.mBodega = New Bodega(New Sucursal(New Empresa(OperadorDatos, Me.Empres_Codigo), Me.Sucurs_Bodega), Me.Bodega_Codigo)
      End If
      Return Me.mBodega
    End Get
    Set(ByVal value As Bodega)
      Me.mBodega = value
      Empres_Codigo = value.Empres_Codigo
      Sucurs_Bodega = value.Sucurs_Codigo
      Bodega_Codigo = value.Bodega_Codigo
    End Set
  End Property

  Public Overridable ReadOnly Property SucursalString() As String
    Get
      If Bodega Is Nothing Then
        Return String.Empty
      Else
        Return mBodega.Sucursal.NombreCompleto
      End If
    End Get
  End Property

  Public Overridable ReadOnly Property BodegaString() As String
    Get
      If Bodega Is Nothing Then
        Return String.Empty
      Else
        Return mBodega.NombreCompleto
      End If
    End Get
  End Property

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Empres_Codigo = CType(Fila("Empres_Codigo"), Integer)
    Item_Codigo = CType(Fila("Item_Codigo"), Integer)
    Sucurs_Bodega = CType(Fila("Sucurs_Bodega"), Integer)
    Bodega_Codigo = CType(Fila("Bodega_Codigo"), Integer)
    Itebod_Costopromedio = CType(Fila("Itebod_Costopromedio"), Decimal)
    Itebod_Cantidad = CType(Fila("Itebod_Cantidad"), Decimal)
    Itebod_StockMinimo = CType(Fila("Itebod_StockMinimo"), Decimal)
    Itebod_StockMaximo = CType(Fila("Itebod_StockMaximo"), Decimal)
    mItem = Nothing
    mBodega = Nothing
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As New DataTable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Empres_Codigo", Empres_Codigo)
    OperadorDatos.AgregarParametro("@Item_Codigo", Item_Codigo)
    OperadorDatos.AgregarParametro("@Sucurs_Bodega", Sucurs_Bodega)
    OperadorDatos.AgregarParametro("@Bodega_Codigo", Bodega_Codigo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    If Not EsNuevo And Not EsModificado Then
      Return True
    End If

    Dim Result As Integer = 0
    Dim bReturn As Boolean = True
    Dim sAccion As String = "M"
    If EsNuevo Then
      sAccion = "I"
    End If
    OperadorDatos.AgregarParametro("@accion", sAccion)
    OperadorDatos.AgregarParametro("@Empres_Codigo", Empres_Codigo)
    OperadorDatos.AgregarParametro("@Item_Codigo", Item_Codigo)
    OperadorDatos.AgregarParametro("@Sucurs_Bodega", Sucurs_Bodega)
    OperadorDatos.AgregarParametro("@Bodega_Codigo", Bodega_Codigo)
    OperadorDatos.AgregarParametro("@Itebod_Costopromedio", Itebod_Costopromedio)
    OperadorDatos.AgregarParametro("@Itebod_Cantidad", Itebod_Cantidad)
    OperadorDatos.AgregarParametro("@Itebod_StockMinimo", Itebod_StockMinimo)
    OperadorDatos.AgregarParametro("@Itebod_StockMaximo", Itebod_StockMaximo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    If bReturn Then
      EsNuevo = False
      EsModificado = False
    End If
    Return bReturn
  End Function

  Public Overridable Function Eliminar() As Boolean
    If EsNuevo Then
      Return True
    End If

    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Empres_Codigo", Empres_Codigo)
    OperadorDatos.AgregarParametro("@Item_Codigo", Item_Codigo)
    OperadorDatos.AgregarParametro("@Sucurs_Bodega", Sucurs_Bodega)
    OperadorDatos.AgregarParametro("@Bodega_Codigo", Bodega_Codigo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "ItemxBodegaList"
Public Class ItemxBodegaList
  Inherits System.ComponentModel.BindingList(Of ItemxBodega)

  Public Shared Function ObtenerLista(ByVal _Item As Item, Optional ByVal _Sucursal As Sucursal = Nothing) As ItemxBodegaList
    Dim oResult As ItemxBodegaList = New ItemxBodegaList
    Dim bReturn As Boolean
    Dim ds As DataTable = Nothing
    With _Item.OperadorDatos
      .AgregarParametro("@Accion", "F")
      .AgregarParametro("@Item_Codigo", _Item.Item_Codigo)
      If _Sucursal IsNot Nothing Then
        .AgregarParametro("@Empres_Codigo", _Sucursal.Empres_Codigo)
        .AgregarParametro("@Sucurs_Bodega", _Sucursal.Sucurs_Codigo)
      End If
      .Procedimiento = "proc_ItemxBodega"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso Not ds Is Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New ItemxBodega(_Item, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function
End Class
#End Region
