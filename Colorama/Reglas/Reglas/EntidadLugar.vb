'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos


#Region "EntidadLugar"
Public Class EntidadLugar

  Const _Procedimiento As String = "proc_EntidadLugar"

  Private mEntidad As Entidad = Nothing

  Public ReadOnly Property NombreCompleto() As String
    Get
      Dim nombre As String = String.Empty
      nombre = String.Format("{0}", EntLug_Nombre)
      Return nombre
    End Get
  End Property

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _OperadorDatos
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Entida_Codigo As Integer)
    Me.New(_OperadorDatos, False)
    Entida_Codigo = _Entida_Codigo
    EsNuevo = Not Me.Recargar
  End Sub

  'Entidad
  Public Overridable Property Entidad() As Entidad
    Get
      If mEntidad Is Nothing Then
        If Entida_Codigo > 0 Then
          mEntidad = New Entidad(OperadorDatos, Me.Entida_Codigo)
        Else
          mEntidad = New Entidad(OperadorDatos, Enumerados.EnumTipoEntidad.Lugar, True)
        End If
      End If
      Return mEntidad
    End Get
    Set(ByVal value As Entidad)
      mEntidad = value
      Me.Entida_Codigo = value.Entida_Codigo
    End Set
  End Property

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Entida_Codigo = CType(Fila("Entida_Codigo"), Integer)
    EntLug_Nombre = CType(Fila("EntLug_Nombre"), String)
    Parame_TipoEntLug = CType(Fila("Parame_TipoEntLug"), Integer)
    Pardet_TipoEntLug = CType(Fila("Pardet_TipoEntLug"), Integer)
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As System.Data.datatable = New System.Data.datatable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Entida_Codigo", Entida_Codigo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    If Not EsNuevo And Not EsModificado Then
      Return True
    End If
    Dim Result As Integer = 0
    Dim bReturn As Boolean = True

    bReturn = Entidad.Guardar()
    If bReturn Then
      Entida_Codigo = Entidad.Entida_Codigo

      Dim sAccion As String = "M"
      If EsNuevo Then
        sAccion = "I"
      End If
      OperadorDatos.AgregarParametro("@accion", sAccion)
      OperadorDatos.AgregarParametro("@Entida_Codigo", Entida_Codigo)
      OperadorDatos.AgregarParametro("@EntLug_Nombre", EntLug_Nombre)
      OperadorDatos.AgregarParametro("@Parame_TipoEntLug", Parame_TipoEntLug)
      OperadorDatos.AgregarParametro("@Pardet_TipoEntLug", Pardet_TipoEntLug)
      OperadorDatos.Procedimiento = _Procedimiento
      bReturn = OperadorDatos.Ejecutar(Result)
      OperadorDatos.LimpiarParametros()
      If bReturn Then
        If Not OperadorDatos.EstaenTransaccion Then
          EsNuevo = False
          EsModificado = False
        End If
      End If
    End If
    Return bReturn
  End Function

  Public Overridable Sub AceptarCambios(Optional ByVal _AceptarEntidad As Boolean = True)
    EsNuevo = False
    EsModificado = False
    If _AceptarEntidad Then
      mEntidad.AceptarCambios()
    End If
  End Sub

  Public Overridable Function Eliminar() As Boolean
    If EsNuevo Then
      Return True
    End If
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Entida_Codigo", Entida_Codigo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "EntidadLugarList"
Public Class EntidadLugarList
  Inherits System.ComponentModel.BindingList(Of EntidadLugar)

  Public Shared Function ObtenerLista(ByVal _op As OperadorDatos) As EntidadLugarList
    Dim oResult As EntidadLugarList = New EntidadLugarList
    Dim bReturn As Boolean
    Dim ds As datatable = Nothing
    With _op
      .AgregarParametro("@Accion", "F")
      .Procedimiento = "proc_EntidadLugar"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso Not ds Is Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New EntidadLugar(_op, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function
End Class
#End Region
