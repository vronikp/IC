'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports Infoware.Reglas.General


#Region "EntidadIdentificacion"
Public Class EntidadIdentificacion

  Const _Procedimiento As String = "proc_EntidadIdentificacion"

  Private mPardetTipoIdent As WWTSParametroDet = Nothing

  Private mEntidad As Entidad = Nothing

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _OperadorDatos
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Entida_Codigo As Integer, ByVal _Parame_Tipoidentificacion As Integer, ByVal _Pardet_Tipoidentificacion As Integer)
    Me.New(_OperadorDatos, False)
    Entida_Codigo = _Entida_Codigo
    Parame_Tipoidentificacion = _Parame_Tipoidentificacion
    Pardet_Tipoidentificacion = _Pardet_Tipoidentificacion
    If Me.Recargar Then
    Else
      Throw New System.Exception("No se puede cargar objeto EntidadIdentificacion")
    End If
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _ParameTipoidentificacion As ParametroDet, ByVal _Identi_Numero As String)
    Me.New(_OperadorDatos, False)
    PardetTipoIdent = _ParameTipoidentificacion
    Identi_Numero = _Identi_Numero
    If Me.RecargarxIdentificacion Then
    Else
      Throw New System.Exception("No se puede cargar objeto EntidadIdentificacion")
    End If
  End Sub

  Public Shadows Property Pardet_TipoidentificacionEnum() As Enumerados.enumTipoIdentificacion
    Get
      Return CType(Pardet_Tipoidentificacion, Enumerados.enumTipoIdentificacion)
    End Get
    Set(ByVal value As Enumerados.enumTipoIdentificacion)
      Pardet_Tipoidentificacion = CInt(value)
    End Set
  End Property

  'Parametrodet
  Public Overridable Overloads Property PardetTipoIdent() As WWTSParametroDet
    Get
      If Me.mPardetTipoIdent Is Nothing AndAlso Not Pardet_Tipoidentificacion = 0 Then
        Me.mPardetTipoIdent = New WWTSParametroDet(OperadorDatos, Parame_Tipoidentificacion, Pardet_Tipoidentificacion)
      End If
      Return Me.mPardetTipoIdent
    End Get
    Set(ByVal value As WWTSParametroDet)
      Me.mPardetTipoIdent = value
      Parame_Tipoidentificacion = value.Parame_Codigo
      Pardet_Tipoidentificacion = value.Pardet_Secuencia
    End Set
  End Property

  'Entidad
  Public Overridable Property Entidad() As Entidad
    Get
      If Me.mEntidad Is Nothing AndAlso Not Entida_Codigo = 0 Then
        Me.mEntidad = New Entidad(OperadorDatos, Entida_Codigo)
      End If
      Return Me.mEntidad
    End Get
    Set(ByVal value As Entidad)
      Me.mEntidad = value
      Entida_Codigo = Me.mEntidad.Entida_Codigo
    End Set
  End Property

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Entida_Codigo = CType(Fila("Entida_Codigo"), Integer)
    Parame_Tipoidentificacion = CType(Fila("Parame_Tipoidentificacion"), Integer)
    Pardet_Tipoidentificacion = CType(Fila("Pardet_Tipoidentificacion"), Integer)
    Identi_Numero = CType(Fila("Identi_Numero"), String)
    mEntidad = Nothing
    mPardetTipoIdent = Nothing
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As System.Data.datatable = New System.Data.datatable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Entida_Codigo", Entida_Codigo)
    OperadorDatos.AgregarParametro("@Parame_Tipoidentificacion", Parame_Tipoidentificacion)
    OperadorDatos.AgregarParametro("@Pardet_Tipoidentificacion", Pardet_Tipoidentificacion)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function RecargarxIdentificacion() As Boolean
    Dim Result As System.Data.DataTable = New System.Data.DataTable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "CI")
    OperadorDatos.AgregarParametro("@Parame_Tipoidentificacion", Parame_Tipoidentificacion)
    OperadorDatos.AgregarParametro("@Pardet_Tipoidentificacion", Pardet_Tipoidentificacion)
    OperadorDatos.AgregarParametro("@Identi_Numero", Identi_Numero)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    If Not EsNuevo And Not EsModificado Then
      Return True
    End If
    Dim Result As Integer = 0
    Dim bReturn As Boolean = True
    Dim sAccion As String = "M"
    If EsNuevo Then
      sAccion = "I"
    End If
    OperadorDatos.AgregarParametro("@accion", sAccion)
    OperadorDatos.AgregarParametro("@Entida_Codigo", Entida_Codigo)
    OperadorDatos.AgregarParametro("@Parame_Tipoidentificacion", Parame_Tipoidentificacion)
    OperadorDatos.AgregarParametro("@Pardet_Tipoidentificacion", Pardet_Tipoidentificacion)
    OperadorDatos.AgregarParametro("@Identi_Numero", Identi_Numero)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    If bReturn Then
      If Not OperadorDatos.EstaenTransaccion Then
        EsNuevo = False
        EsModificado = False
      End If
    End If
    Return bReturn
  End Function

  Public Overridable Sub AceptarCambios()
    EsNuevo = False
    EsModificado = False
  End Sub

  Public Overridable Function Eliminar() As Boolean
    If EsNuevo Then
      Return True
    End If
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Entida_Codigo", Entida_Codigo)
    OperadorDatos.AgregarParametro("@Parame_Tipoidentificacion", Parame_Tipoidentificacion)
    OperadorDatos.AgregarParametro("@Pardet_Tipoidentificacion", Pardet_Tipoidentificacion)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "EntidadIdentificacionList"
Public Class EntidadIdentificacionList
  Inherits System.ComponentModel.BindingList(Of EntidadIdentificacion)

  Public Shared Function ObtenerLista(ByVal _op As OperadorDatos, ByVal _Entidad As Entidad) As EntidadIdentificacionList
    Dim oResult As EntidadIdentificacionList = New EntidadIdentificacionList
    Dim bReturn As Boolean
    Dim ds As datatable = Nothing
    With _op
      .AgregarParametro("@Accion", "F")
      .AgregarParametro("@Entida_Codigo", _Entidad.Entida_Codigo)
      .Procedimiento = "proc_EntidadIdentificacion"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso Not ds Is Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New EntidadIdentificacion(_op, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function
End Class
#End Region
