'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports Infoware.Reglas.General


#Region "PagosDetAsignacion"
Public Class PagosDetAsignacion

  Const _Procedimiento As String = "proc_PagosDetAsignacion"

  Private mPagosDet As PagosDet = Nothing

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _OperadorDatos
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _PagosDet As PagosDet, ByVal _EsNuevo As Boolean)
    Me.New(_PagosDet.OperadorDatos, _EsNuevo)
    PagosDet = _PagosDet
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _PagosDet As PagosDet, ByVal _PaDeAs_Secuencia As Integer)
    Me.New(_PagosDet, False)
    PaDeAs_Secuencia = _PaDeAs_Secuencia
    If Me.Recargar Then
    Else
      Throw New System.Exception("No se puede cargar objeto PagosDetAsignacion")
    End If
  End Sub

  'PagosDet
  Public Overridable Property PagosDet() As PagosDet
    Get
      If Me.mPagosDet Is Nothing Then
        Me.mPagosDet = New PagosDet(New Sucursal(New Empresa(OperadorDatos, Empres_Codigo), Sucurs_Codigo), New WWTSParametroDet(OperadorDatos, Parame_TipoCuenta, Pardet_TipoCuenta), Pagdet_Secuencia)
      End If
      Return Me.mPagosDet
    End Get
    Set(ByVal value As PagosDet)
      Me.mPagosDet = value
      Empres_Codigo = Me.mPagosDet.Empres_Codigo
      Sucurs_Codigo = mPagosDet.Sucurs_Codigo
      Parame_TipoCuenta = mPagosDet.Parame_TipoCuenta
      Pardet_TipoCuenta = mPagosDet.Pardet_TipoCuenta
      Pagdet_Secuencia = mPagosDet.Pagdet_Secuencia
    End Set
  End Property

  <Infoware.Reportes.CampoReporteAtributo("ValorAsignado", Infoware.Reportes.CampoReporteAtributo.EnumTipoDato.Decimales, 100, True)> _
  Public ReadOnly Property Valor As Decimal
    Get
      Return PaDeAs_Valor
    End Get
  End Property

  <Infoware.Reportes.CampoReporteAtributo("SobreAsignado", Infoware.Reportes.CampoReporteAtributo.EnumTipoDato.Texto, 100, True)> _
  Public ReadOnly Property SobreAsignado As String
    Get
      If PagosDet Is Nothing Then
        Return String.Empty
      Else
        Return PagosDet.MovimientoInventario.TrabajoNumero
      End If
    End Get
  End Property

  <Infoware.Reportes.CampoReporteAtributo("SaldoAsignado", Infoware.Reportes.CampoReporteAtributo.EnumTipoDato.Decimales, 100, True)> _
  Public ReadOnly Property Saldo As Decimal
    Get
      If PagosDet Is Nothing Then
        Return String.Empty
      Else
        Return PagosDet.Pendiente
      End If
    End Get
  End Property

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Empres_Codigo = CType(Fila("Empres_Codigo"), Integer)
    Sucurs_Codigo = CType(Fila("Sucurs_Codigo"), Integer)
    Parame_TipoCuenta = CType(Fila("Parame_TipoCuenta"), Integer) '**
    Pardet_TipoCuenta = CType(Fila("Pardet_TipoCuenta"), Integer) '**
    Pagdet_Secuencia = CType(Fila("Pagdet_Secuencia"), Integer)
    PaDeAs_Secuencia = CType(Fila("PaDeAs_Secuencia"), Integer)
    Entida_Codigo = CInt(Fila("Entida_Codigo"))
 
    PaDeAs_Valor = CType(Fila("PaDeAs_Valor"), Decimal)
    Pagdet_Pago = CInt(Fila("Pagdet_Pago"))
    mPagosDet = Nothing
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As New DataTable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Empres_Codigo", Empres_Codigo)
    OperadorDatos.AgregarParametro("@Sucurs_Codigo", Sucurs_Codigo)
    OperadorDatos.AgregarParametro("@Parame_TipoCuenta", Parame_TipoCuenta)
    OperadorDatos.AgregarParametro("@Pardet_TipoCuenta", Pardet_TipoCuenta)
    OperadorDatos.AgregarParametro("@Pagdet_Secuencia", Pagdet_Secuencia)
    OperadorDatos.AgregarParametro("@PaDeAs_Secuencia", PaDeAs_Secuencia)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    Return False
  End Function

  Public Overridable Sub AceptarCambios()
    EsNuevo = False
    EsModificado = False
  End Sub

  Public Overridable Function Eliminar() As Boolean
    Return False
  End Function
End Class
#End Region

#Region "PagosDetAsignacionList"
Public Class PagosDetAsignacionList
  Inherits System.ComponentModel.BindingList(Of PagosDetAsignacion)

  Public Shared Function ObtenerLista(ByVal _PagosDet As PagosDet) As PagosDetAsignacionList
    Dim oResult As PagosDetAsignacionList = New PagosDetAsignacionList
    Dim bReturn As Boolean
    Dim ds As DataTable = Nothing
    With _PagosDet.OperadorDatos
      .AgregarParametro("@Accion", "F")
      .AgregarParametro("@Empres_Codigo", _PagosDet.Empres_Codigo)
      .AgregarParametro("@Sucurs_Codigo", _PagosDet.Sucurs_Codigo)
      .AgregarParametro("@Parame_TipoCuenta", _PagosDet.Parame_TipoCuenta)
      .AgregarParametro("@Pardet_TipoCuenta", _PagosDet.Pardet_TipoCuenta)
      .AgregarParametro("@Pagdet_Pago", _PagosDet.Pagdet_Secuencia)
      .Procedimiento = "proc_PagosDetAsignacion"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso Not ds Is Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New PagosDetAsignacion(_PagosDet, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function
End Class
#End Region
