'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports Infoware.Reglas.General



#Region "ItemxTipoPrecio"
Public Class ItemxTipoPrecio

  Const _Procedimiento As String = "proc_ItemxTipoPrecio"

  Private mSucursal As Sucursal = Nothing

  Private mPardetTipoPrecio As WWTSParametroDet = Nothing

  Private mItem As Item = Nothing

  Public Sub New(ByVal _Item As Item, ByVal _Sucursal As Sucursal, ByVal _EsNuevo As Boolean)
    MyBase.New()
    Item = _Item
    OperadorDatos = _Item.OperadorDatos
    Sucursal = _Sucursal
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _Item As Item, ByVal _Sucursal As Sucursal, ByVal _PardetTipoPrecio As WWTSParametroDet)
    Me.New(_Item, _Sucursal, False)
    PardetTipoPrecio = _PardetTipoPrecio
    If Me.Recargar Then
    Else
      Throw New System.Exception("No se puede cargar objeto ItemxTipoPrecio")
    End If
  End Sub

  'Sucursal
  Public Overridable Property Sucursal() As Sucursal
    Get
      If Me.mSucursal Is Nothing AndAlso Sucurs_Codigo > 0 Then
        Me.mSucursal = New Sucursal(New Empresa(OperadorDatos, Empres_Codigo), Sucurs_Codigo)
      End If
      Return Me.mSucursal
    End Get
    Set(ByVal value As Sucursal)
      Me.mSucursal = value
      Empres_Codigo = value.Empres_Codigo
      Sucurs_Codigo = value.Sucurs_Codigo
    End Set
  End Property

  'WWTSParametroDet
  Public Overridable Property PardetTipoPrecio() As WWTSParametroDet
    Get
      If Me.mPardetTipoPrecio Is Nothing AndAlso Pardet_TipoPrecio > 0 Then
        Me.mPardetTipoPrecio = New WWTSParametroDet(OperadorDatos, Parame_TipoPrecio, Pardet_TipoPrecio)
      End If
      Return Me.mPardetTipoPrecio
    End Get
    Set(ByVal value As WWTSParametroDet)
      Me.mPardetTipoPrecio = value
      Parame_TipoPrecio = value.Parame_Codigo
      Pardet_TipoPrecio = value.Pardet_Secuencia
    End Set
  End Property

  Public Overridable ReadOnly Property PardetTipoPrecioString() As String
    Get
      If PardetTipoPrecio Is Nothing Then
        Return String.Empty
      Else
        Return mPardetTipoPrecio.Pardet_Descripcion
      End If
    End Get
  End Property

  'Item
  Public Overridable Property Item() As Item
    Get
      If Me.mItem Is Nothing AndAlso Item_Codigo > 0 Then
        Me.mItem = New Item(OperadorDatos, Item_Codigo)
      End If
      Return Me.mItem
    End Get
    Set(ByVal value As Item)
      Me.mItem = value
      Item_Codigo = value.Item_Codigo
    End Set
  End Property

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Empres_Codigo = CType(Fila("Empres_Codigo"), Integer)
    Sucurs_Codigo = CType(Fila("Sucurs_Codigo"), Integer)
    Parame_TipoPrecio = CType(Fila("Parame_TipoPrecio"), Integer)
    Pardet_TipoPrecio = CType(Fila("Pardet_TipoPrecio"), Integer)
    Item_Codigo = CType(Fila("Item_Codigo"), Integer)
    IteTip_Valor = CType(Fila("IteTip_Valor"), Decimal)
    mSucursal = Nothing
    mPardetTipoPrecio = Nothing
    mItem = Nothing
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As New DataTable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Empres_Codigo", Empres_Codigo)
    OperadorDatos.AgregarParametro("@Sucurs_Codigo", Sucurs_Codigo)
    OperadorDatos.AgregarParametro("@Parame_TipoPrecio", Parame_TipoPrecio)
    OperadorDatos.AgregarParametro("@Pardet_TipoPrecio", Pardet_TipoPrecio)
    OperadorDatos.AgregarParametro("@Item_Codigo", Item_Codigo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    Dim Result As Integer = 0
    Dim bReturn As Boolean = True
    Dim sAccion As String = "M"
    If esNuevo Then
      sAccion = "I"
    End If
    OperadorDatos.AgregarParametro("@accion", sAccion)
    OperadorDatos.AgregarParametro("@Empres_Codigo", Empres_Codigo)
    OperadorDatos.AgregarParametro("@Sucurs_Codigo", Sucurs_Codigo)
    OperadorDatos.AgregarParametro("@Parame_TipoPrecio", Parame_TipoPrecio)
    OperadorDatos.AgregarParametro("@Pardet_TipoPrecio", Pardet_TipoPrecio)
    OperadorDatos.AgregarParametro("@Item_Codigo", Item_Codigo)
    OperadorDatos.AgregarParametro("@IteTip_Valor", IteTip_Valor)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    If bReturn Then
      EsNuevo = False
      EsModificado = False
    End If
    Return bReturn
  End Function

  Public Overridable Function Eliminar() As Boolean
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Empres_Codigo", Empres_Codigo)
    OperadorDatos.AgregarParametro("@Sucurs_Codigo", Sucurs_Codigo)
    OperadorDatos.AgregarParametro("@Parame_TipoPrecio", Parame_TipoPrecio)
    OperadorDatos.AgregarParametro("@Pardet_TipoPrecio", Pardet_TipoPrecio)
    OperadorDatos.AgregarParametro("@Item_Codigo", Item_Codigo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "ItemxTipoPrecioList"
Public Class ItemxTipoPrecioList
  Inherits System.ComponentModel.BindingList(Of ItemxTipoPrecio)

  Public Shared Function ObtenerLista(ByVal _Item As Item, ByVal _Sucursal As Sucursal) As ItemxTipoPrecioList
    Dim oResult As ItemxTipoPrecioList = New ItemxTipoPrecioList
    Dim bReturn As Boolean
    Dim ds As DataTable = Nothing
    With _Item.OperadorDatos
      .AgregarParametro("@Accion", "F")
      .AgregarParametro("@Empres_Codigo", _Sucursal.Empres_Codigo)
      .AgregarParametro("@Sucurs_Codigo", _Sucursal.Sucurs_Codigo)
      .AgregarParametro("@Item_Codigo", _Item.Item_Codigo)
      .Procedimiento = "proc_ItemxTipoPrecio"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso Not ds Is Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New ItemxTipoPrecio(_Item, _Sucursal, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function
End Class
#End Region
