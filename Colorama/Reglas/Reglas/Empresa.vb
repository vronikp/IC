'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos


#Region "Empresa"
Public Class Empresa

  Const _Procedimiento As String = "proc_Empresa"

  Private mEntidadjuridica As EntidadJuridica = Nothing

  Private mEntidadContador As EntidadNatural = Nothing

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _OperadorDatos
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Empres_Codigo As Integer)
    Me.New(_OperadorDatos, False)
    Empres_Codigo = _Empres_Codigo
    If Me.Recargar Then
    Else
      Throw New System.Exception("No se puede cargar objeto Empresa")
    End If
  End Sub

  'Entidadjuridica
  Public Overridable Property Entidadjuridica() As EntidadJuridica
    Get
      If Me.mEntidadjuridica Is Nothing Then
        Me.mEntidadjuridica = New EntidadJuridica(OperadorDatos, Entida_Codigo)
      End If
      Return Me.mEntidadjuridica
    End Get
    Set(ByVal value As EntidadJuridica)
      Me.mEntidadjuridica = value
      Entida_Codigo = value.Entida_Codigo
    End Set
  End Property

  Public ReadOnly Property NombreCompleto() As String
    Get
      If Entidadjuridica Is Nothing Then
        Return String.Empty
      Else
        Return mEntidadjuridica.NombreCompleto
      End If
    End Get
  End Property

  'EntidadContador
  Public Overridable Property EntidadContador() As EntidadNatural
    Get
      If Me.mEntidadContador Is Nothing AndAlso Entida_Contador > 0 Then
        Me.mEntidadContador = New EntidadNatural(OperadorDatos, Entida_Contador)
      End If
      Return Me.mEntidadContador
    End Get
    Set(ByVal value As EntidadNatural)
      Me.mEntidadContador = value
      If value IsNot Nothing Then
        Entida_Contador = value.Entida_Codigo
      End If
    End Set
  End Property

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Empres_Codigo = CType(Fila("Empres_Codigo"), Integer)
    Entida_Codigo = CType(Fila("Entida_Codigo"), Integer)
    Empres_Visible = CType(Fila("Empres_Visible"), Boolean)
    Dim obj As Object
    obj = Fila("Entida_Contador")
    If TypeOf obj Is DBNull Then
      Entida_Contador = 0
    Else
      Entida_Contador = CInt(obj)
    End If
    mEntidadContador = Nothing
    mEntidadjuridica = Nothing
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As System.Data.datatable = New System.Data.datatable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Empres_Codigo", Empres_Codigo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Event CambioDatos As EventHandler

  Public Overridable Function Guardar() As Boolean
    'If Not EsNuevo And Not EsModificado Then
    '  Return True
    'End If
    Dim Result As Integer = 0
    Dim bReturn As Boolean = True

    OperadorDatos.ComenzarTransaccion()
    bReturn = mEntidadjuridica.Guardar()
    If bReturn Then
      Entida_Codigo = mEntidadjuridica.Entida_Codigo

      Dim sAccion As String = "M"
      If EsNuevo Then
        sAccion = "I"
      End If
      OperadorDatos.AgregarParametro("@accion", sAccion)
      OperadorDatos.AgregarParametro("@Empres_Codigo", Empres_Codigo)
      OperadorDatos.AgregarParametro("@Entida_Codigo", Entida_Codigo)
      OperadorDatos.AgregarParametro("@Empres_Visible", Empres_Visible)
      If Entida_Contador > 0 Then
        OperadorDatos.AgregarParametro("@Entida_Contador", Entida_Contador)
      End If
      OperadorDatos.Procedimiento = _Procedimiento
      bReturn = OperadorDatos.Ejecutar(Result)
      OperadorDatos.LimpiarParametros()
      If bReturn Then
        If EsNuevo Then
          Empres_Codigo = Result
        End If
        'If Not OperadorDatos.EstaenTransaccion Then
        '  EsNuevo = False
        '  EsModificado = False
        'End If
      End If
    End If
    If bReturn Then
      OperadorDatos.TerminarTransaccion()
      AceptarCambios()
    Else
      OperadorDatos.CancelarTransaccion()
    End If
    Return bReturn
  End Function

  Public Overridable Sub AceptarCambios()
    EsNuevo = False
    EsModificado = False
    mEntidadjuridica.AceptarCambios()

    RaiseEvent CambioDatos(Me, Nothing)
  End Sub

  Public Overridable Function Eliminar() As Boolean
    If EsNuevo Then
      Return True
    End If
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Empres_Codigo", Empres_Codigo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "EmpresaList"
Public Class EmpresaList
  Inherits System.ComponentModel.BindingList(Of Empresa)

  Public Shared Function ObtenerLista(ByVal _op As OperadorDatos) As EmpresaList
    Dim oResult As EmpresaList = New EmpresaList
    Dim bReturn As Boolean
    Dim ds As datatable = Nothing
    With _op
      .AgregarParametro("@Accion", "F")
      .Procedimiento = "proc_Empresa"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso Not ds Is Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New Empresa(_op, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function
End Class
#End Region
