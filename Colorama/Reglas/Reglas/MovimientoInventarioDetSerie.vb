'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports Infoware.Reglas.General


#Region "MovimientoInventarioDetSerie"
Public Class MovimientoInventarioDetSerie

  Const _Procedimiento As String = "proc_MovimientoInventarioDetSerie"
  Private mMovimientoinventariodet As MovimientoInventarioDet = Nothing

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _OperadorDatos
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Parame_Tipomovinv As Integer, ByVal _Pardet_Tipomovinv As Integer, ByVal _Empres_Bodega As Integer, ByVal _Sucurs_Bodega As Integer, ByVal _Movinv_Secuencia As Integer, ByVal _Moinde_Secuencia As Integer, ByVal _Moidse_Secuencia As Integer)
    Me.New(_OperadorDatos, False)
    Parame_Tipomovinv = _Parame_Tipomovinv
    Pardet_Tipomovinv = _Pardet_Tipomovinv
    Empres_Bodega = _Empres_Bodega
    Sucurs_Bodega = _Sucurs_Bodega
    Movinv_Secuencia = _Movinv_Secuencia
    Moinde_Secuencia = _Moinde_Secuencia
    Moidse_Secuencia = _Moidse_Secuencia
    If Me.Recargar Then
    Else
      Throw New System.Exception("No se puede cargar objeto MovimientoInventarioDetSerie")
    End If
  End Sub

  Public Sub New(ByVal _MovimientoInventarioDet As MovimientoInventarioDet, ByVal _EsNuevo As Boolean)
    Me.New(_MovimientoInventarioDet.OperadorDatos, False)
    Parame_Tipomovinv = _MovimientoInventarioDet.Parame_Tipomovinv
    Pardet_Tipomovinv = _MovimientoInventarioDet.Pardet_Tipomovinv
    Empres_Bodega = _MovimientoInventarioDet.Empres_Bodega
    Sucurs_Bodega = _MovimientoInventarioDet.Sucurs_Bodega
    Movinv_Secuencia = _MovimientoInventarioDet.Movinv_Secuencia
    Moinde_Secuencia = _MovimientoInventarioDet.Moinde_Secuencia
    EsNuevo = _EsNuevo
  End Sub

  'Movimientoinventariodet
  Public Overridable Property Movimientoinventariodet() As MovimientoInventarioDet
    Get
      If Me.mMovimientoinventariodet Is Nothing AndAlso Moinde_Secuencia > 0 Then
        Me.mMovimientoinventariodet = New MovimientoInventarioDet(New MovimientoInventario(New Sucursal(New Empresa(OperadorDatos, Empres_Bodega), Sucurs_Bodega), CType(Pardet_Tipomovinv, Enumerados.enumTipoMovInv), Movinv_Secuencia), Moinde_Secuencia)
      End If
      Return Me.mMovimientoinventariodet
    End Get
    Set(ByVal value As MovimientoInventarioDet)
      Me.mMovimientoinventariodet = value
      Parame_Tipomovinv = value.Parame_Tipomovinv
      Pardet_Tipomovinv = value.Pardet_Tipomovinv
      Empres_Bodega = value.Empres_Bodega
      Sucurs_Bodega = value.Sucurs_Bodega
      Movinv_Secuencia = value.Movinv_Secuencia
      Moinde_Secuencia = value.Moinde_Secuencia
    End Set
  End Property

  <Infoware.Reportes.CampoReporteAtributo("Serie", Infoware.Reportes.CampoReporteAtributo.EnumTipoDato.Texto, 150, True)> _
  Public Property Serie() As String
    Get
      Return Moidse_Serie
    End Get
    Set(ByVal value As String)
      Moidse_Serie = value
    End Set
  End Property

  <Infoware.Reportes.CampoReporteAtributo("SerieFormateada", Infoware.Reportes.CampoReporteAtributo.EnumTipoDato.Texto, 150, False)> _
  Public ReadOnly Property SerieFormateada() As String
    Get
      If String.IsNullOrEmpty(Moidse_Serie) Then
        Return String.Empty
      Else
        Return String.Format("*{0}*", Moidse_Serie.Trim)
      End If
    End Get
  End Property

  <Infoware.Reportes.CampoReporteAtributo("CodigoBarra", Infoware.Reportes.CampoReporteAtributo.EnumTipoDato.Texto, 150, False)> _
  Public ReadOnly Property CodigoBarra() As String
    Get
      If Movimientoinventariodet Is Nothing OrElse Movimientoinventariodet.Item Is Nothing OrElse String.IsNullOrEmpty(Movimientoinventariodet.Item.Item_CodigoAuxiliar) Then
        Return String.Empty
      Else
        Return String.Format("*{0}*", Movimientoinventariodet.Item.Item_CodigoAuxiliar.Trim)
      End If
    End Get
  End Property

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Parame_Tipomovinv = CType(Fila("Parame_Tipomovinv"), Integer)
    Pardet_Tipomovinv = CType(Fila("Pardet_Tipomovinv"), Integer)
    Empres_Bodega = CType(Fila("Empres_Bodega"), Integer)
    Sucurs_Bodega = CType(Fila("Sucurs_Bodega"), Integer)
    Movinv_Secuencia = CType(Fila("Movinv_Secuencia"), Integer)
    Moinde_Secuencia = CType(Fila("Moinde_Secuencia"), Integer)
    Moidse_Secuencia = CType(Fila("Moidse_Secuencia"), Integer)
    Moidse_Serie = CType(Fila("Moidse_Serie"), String)
    mMovimientoinventariodet = Nothing
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As New DataTable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Parame_Tipomovinv", Parame_Tipomovinv)
    OperadorDatos.AgregarParametro("@Pardet_Tipomovinv", Pardet_Tipomovinv)
    OperadorDatos.AgregarParametro("@Empres_Bodega", Empres_Bodega)
    OperadorDatos.AgregarParametro("@Sucurs_Bodega", Sucurs_Bodega)
    OperadorDatos.AgregarParametro("@Movinv_Secuencia", Movinv_Secuencia)
    OperadorDatos.AgregarParametro("@Moinde_Secuencia", Moinde_Secuencia)
    OperadorDatos.AgregarParametro("@Moidse_Secuencia", Moidse_Secuencia)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    If Not EsNuevo And Not EsModificado Then
      Return True
    End If

    Dim Result As Integer = 0
    Dim bReturn As Boolean = True
    Dim sAccion As String = "M"
    If EsNuevo Then
      sAccion = "I"
    End If
    OperadorDatos.AgregarParametro("@accion", sAccion)
    OperadorDatos.AgregarParametro("@Parame_Tipomovinv", Parame_Tipomovinv)
    OperadorDatos.AgregarParametro("@Pardet_Tipomovinv", Pardet_Tipomovinv)
    OperadorDatos.AgregarParametro("@Empres_Bodega", Empres_Bodega)
    OperadorDatos.AgregarParametro("@Sucurs_Bodega", Sucurs_Bodega)
    OperadorDatos.AgregarParametro("@Movinv_Secuencia", Movinv_Secuencia)
    OperadorDatos.AgregarParametro("@Moinde_Secuencia", Moinde_Secuencia)
    OperadorDatos.AgregarParametro("@Moidse_Secuencia", Moidse_Secuencia)
    OperadorDatos.AgregarParametro("@Moidse_Serie", Moidse_Serie)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    If bReturn Then
      If EsNuevo Then
        Moidse_Secuencia = Result
      End If

      If Not OperadorDatos.EstaenTransaccion Then
        AceptarCambios()
      End If
    End If
    Return bReturn
  End Function

  Public Overridable Sub AceptarCambios()
    EsNuevo = False
    EsModificado = False
  End Sub

  Public Overridable Function Eliminar() As Boolean
    If EsNuevo Then
      Return True
    End If

    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Parame_Tipomovinv", Parame_Tipomovinv)
    OperadorDatos.AgregarParametro("@Pardet_Tipomovinv", Pardet_Tipomovinv)
    OperadorDatos.AgregarParametro("@Empres_Bodega", Empres_Bodega)
    OperadorDatos.AgregarParametro("@Sucurs_Bodega", Sucurs_Bodega)
    OperadorDatos.AgregarParametro("@Movinv_Secuencia", Movinv_Secuencia)
    OperadorDatos.AgregarParametro("@Moinde_Secuencia", Moinde_Secuencia)
    OperadorDatos.AgregarParametro("@Moidse_Secuencia", Moidse_Secuencia)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "MovimientoInventarioDetSerieList"
Public Class MovimientoInventarioDetSerieList
  Inherits System.ComponentModel.BindingList(Of MovimientoInventarioDetSerie)

  Public Shared Function ObtenerLista(ByVal _MovimientoInventarioDet As MovimientoInventarioDet) As MovimientoInventarioDetSerieList
    Dim oResult As MovimientoInventarioDetSerieList = New MovimientoInventarioDetSerieList
    Dim bReturn As Boolean
    Dim ds As DataTable = Nothing
    With _MovimientoInventarioDet.OperadorDatos
      .AgregarParametro("@Accion", "F")
      .AgregarParametro("@Parame_Tipomovinv", _MovimientoInventarioDet.Parame_Tipomovinv)
      .AgregarParametro("@Pardet_Tipomovinv", _MovimientoInventarioDet.Pardet_Tipomovinv)
      .AgregarParametro("@Empres_Bodega", _MovimientoInventarioDet.Empres_Bodega)
      .AgregarParametro("@Sucurs_Bodega", _MovimientoInventarioDet.Sucurs_Bodega)
      .AgregarParametro("@Movinv_Secuencia", _MovimientoInventarioDet.Movinv_Secuencia)
      .AgregarParametro("@Moinde_Secuencia", _MovimientoInventarioDet.Moinde_Secuencia)
      .Procedimiento = "proc_MovimientoInventarioDetSerie"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso Not ds Is Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New MovimientoInventarioDetSerie(_MovimientoInventarioDet.OperadorDatos, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function
End Class
#End Region
