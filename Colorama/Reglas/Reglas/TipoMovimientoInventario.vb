'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports Infoware.Reglas.General


#Region "TipoMovimientoInventario"
Public Class TipoMovimientoInventario

  Const _Procedimiento As String = "proc_TipoMovimientoInventario"

  Private mSucursal As Sucursal = Nothing

  Private mPardetTipoMovInv As WWTSParametroDet = Nothing

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _OperadorDatos
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _Sucursal As Sucursal, ByVal _esnuevo As Boolean)
    Me.New(_Sucursal.OperadorDatos, _esnuevo)
    Sucursal = _Sucursal
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Parame_Tipomovinv As Integer, ByVal _Pardet_Tipomovinv As Integer, ByVal _Empres_Codigo As Integer, ByVal _Sucurs_Codigo As Integer)
    Me.New(_OperadorDatos, False)
    Parame_Tipomovinv = _Parame_Tipomovinv
    Pardet_Tipomovinv = _Pardet_Tipomovinv
    Empres_Codigo = _Empres_Codigo
    Sucurs_Codigo = _Sucurs_Codigo
    If Me.Recargar Then
    Else
      Throw New System.Exception("No se puede cargar objeto TipoMovimientoInventario")
    End If
  End Sub

  'Sucursal
  Public Overridable Property Sucursal() As Sucursal
    Get
      If Me.mSucursal Is Nothing AndAlso Sucurs_Codigo > 0 Then
        Me.mSucursal = New Sucursal(New Empresa(OperadorDatos, Empres_Codigo), Sucurs_Codigo)
      End If
      Return Me.mSucursal
    End Get
    Set(ByVal value As Sucursal)
      Me.mSucursal = value
      Sucurs_Codigo = value.Sucurs_Codigo
    End Set
  End Property

  'WWTSParametroDet
  Public Overridable Property PardetTipoMovInv() As WWTSParametroDet
    Get
      If Me.mPardetTipoMovInv Is Nothing AndAlso Pardet_Tipomovinv > 0 Then
        Me.mPardetTipoMovInv = New WWTSParametroDet(OperadorDatos, Parame_Tipomovinv, Pardet_Tipomovinv)
      End If
      Return Me.mPardetTipoMovInv
    End Get
    Set(ByVal value As WWTSParametroDet)
      Me.mPardetTipoMovInv = value
      Parame_Tipomovinv = value.Parame_Codigo
      Pardet_Tipomovinv = value.Pardet_Secuencia
    End Set
  End Property

  <Infoware.Reportes.CampoReporteAtributo("Tipo de movimiento", Infoware.Reportes.CampoReporteAtributo.EnumTipoDato.Texto, 150, True)> _
  Public ReadOnly Property PardetTipoMovInvString() As String
    Get
      If PardetTipoMovInv Is Nothing Then
        Return String.Empty
      Else
        Return PardetTipoMovInv.Pardet_Descripcion
      End If
    End Get
  End Property

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Parame_Tipomovinv = CType(Fila("Parame_Tipomovinv"), Integer)
    Pardet_Tipomovinv = CType(Fila("Pardet_Tipomovinv"), Integer)
    Empres_Codigo = CType(Fila("Empres_Codigo"), Integer)
    Sucurs_Codigo = CType(Fila("Sucurs_Codigo"), Integer)
    Tipmov_Secuencia = CType(Fila("Tipmov_Secuencia"), Integer)
    Tipmov_Seguirsecuencia = CType(Fila("Tipmov_Seguirsecuencia"), Boolean)
    mSucursal = Nothing
    mPardetTipoMovInv = Nothing
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As New DataTable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Parame_Tipomovinv", Parame_Tipomovinv)
    OperadorDatos.AgregarParametro("@Pardet_Tipomovinv", Pardet_Tipomovinv)
    OperadorDatos.AgregarParametro("@Empres_Codigo", Empres_Codigo)
    OperadorDatos.AgregarParametro("@Sucurs_Codigo", Sucurs_Codigo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    If Not EsNuevo And Not EsModificado Then
      Return True
    End If

    Dim Result As Integer = 0
    Dim bReturn As Boolean = True
    Dim sAccion As String = "M"
    If EsNuevo Then
      sAccion = "I"
    End If
    OperadorDatos.AgregarParametro("@accion", sAccion)
    OperadorDatos.AgregarParametro("@Parame_Tipomovinv", Parame_Tipomovinv)
    OperadorDatos.AgregarParametro("@Pardet_Tipomovinv", Pardet_Tipomovinv)
    OperadorDatos.AgregarParametro("@Empres_Codigo", Empres_Codigo)
    OperadorDatos.AgregarParametro("@Sucurs_Codigo", Sucurs_Codigo)
    OperadorDatos.AgregarParametro("@Tipmov_Secuencia", Tipmov_Secuencia)
    OperadorDatos.AgregarParametro("@Tipmov_Seguirsecuencia", Tipmov_Seguirsecuencia)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    If bReturn Then
      EsNuevo = False
      EsModificado = False
    End If
    Return bReturn
  End Function

  Public Overridable Function Eliminar() As Boolean
    If EsNuevo Then
      Return True
    End If

    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Parame_Tipomovinv", Parame_Tipomovinv)
    OperadorDatos.AgregarParametro("@Pardet_Tipomovinv", Pardet_Tipomovinv)
    OperadorDatos.AgregarParametro("@Empres_Codigo", Empres_Codigo)
    OperadorDatos.AgregarParametro("@Sucurs_Codigo", Sucurs_Codigo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "TipoMovimientoInventarioList"
Public Class TipoMovimientoInventarioList
  Inherits System.ComponentModel.BindingList(Of TipoMovimientoInventario)

  Public Shared Function ObtenerLista(ByVal _Sucursal As Sucursal) As TipoMovimientoInventarioList
    Dim oResult As TipoMovimientoInventarioList = New TipoMovimientoInventarioList
    Dim bReturn As Boolean
    Dim ds As DataTable = Nothing
    With _Sucursal.OperadorDatos
      .AgregarParametro("@Accion", "F")
      .AgregarParametro("@Empres_Codigo", _Sucursal.Empres_Codigo)
      .AgregarParametro("@Sucurs_Codigo", _Sucursal.Sucurs_Codigo)
      .Procedimiento = "proc_TipoMovimientoInventario"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso Not ds Is Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New TipoMovimientoInventario(_Sucursal, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function
End Class
#End Region
