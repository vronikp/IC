'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports System.IO
Imports System.Xml
Imports System.Xml.Serialization

#Region "ParametroDet"
Public Class WWTSParametroDet
  Inherits Infoware.Reglas.General.ParametroDet

  Const _Procedimiento As String = "proc_ParametroDet"

  Private mParametro As WWTSParametro = Nothing

  Private mPardetPadre As WWTSParametroDet = Nothing

  Private mPardet_DatoStr2 As String = ""

  Private mPardet_DatoStr3 As String = ""

  Private mCtaCtb_CtaCtble1 As String = ""

  Private mCtaCtb_CtaCtble2 As String = ""

  'Private mCuentaContable1 As CuentaContable = Nothing

  'Private mCuentaContable2 As CuentaContable = Nothing

  Private mPardet_DatoBit1 As Boolean = False

  <XmlAttribute()> _
  Public Overridable Property Pardet_DatoStr2() As String
    Get
      Return Me.mPardet_DatoStr2
    End Get
    Set(ByVal value As String)
      Me.mPardet_DatoStr2 = value
      EsModificado = True
    End Set
  End Property

  <XmlAttribute()> _
  Public Overridable Property Pardet_DatoStr3() As String
    Get
      Return Me.mPardet_DatoStr3
    End Get
    Set(ByVal value As String)
      Me.mPardet_DatoStr3 = value
      EsModificado = True
    End Set
  End Property

  <XmlAttribute()> _
  Public Overridable Property CtaCtb_CtaCtble1() As String
    Get
      Return Me.mCtaCtb_CtaCtble1
    End Get
    Set(ByVal value As String)
      Me.mCtaCtb_CtaCtble1 = value
      EsModificado = True
    End Set
  End Property

  <XmlAttribute()> _
  Public Overridable Property CtaCtb_CtaCtble2() As String
    Get
      Return Me.mCtaCtb_CtaCtble2
    End Get
    Set(ByVal value As String)
      Me.mCtaCtb_CtaCtble2 = value
      EsModificado = True
    End Set
  End Property

  <XmlAttribute()> _
  Public Overridable Property Pardet_DatoBit1() As Boolean
    Get
      Return Me.mPardet_DatoBit1
    End Get
    Set(ByVal value As Boolean)
      Me.mPardet_DatoBit1 = value
      EsModificado = True
    End Set
  End Property

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Parame_Codigo As Integer, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _OperadorDatos
    Parame_Codigo = _Parame_Codigo
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Parame_Codigo As Integer, ByVal _Pardet_Secuencia As Integer)
    Me.New(_OperadorDatos, _Parame_Codigo, False)
    Pardet_Secuencia = _Pardet_Secuencia
    If Not Me.Recargar Then
      Throw New System.Exception("No se puede cargar objeto ParametroDet")
    End If
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Parametro As WWTSParametro, ByVal _Pardet_Secuencia As Integer)
    Me.New(_OperadorDatos, _Parametro.Parame_Codigo, False)
  End Sub

  'Parametro
  Public Shadows Property Parametro() As WWTSParametro
    Get
      If Me.mParametro Is Nothing AndAlso Parame_Codigo > 0 Then
        Me.mParametro = New WWTSParametro(OperadorDatos, Parame_Codigo)
      End If
      Return Me.mParametro
    End Get
    Set(ByVal value As WWTSParametro)
      Me.mParametro = value
      Parame_Codigo = value.Parame_Codigo
    End Set
  End Property

  Public Shadows Property PardetPadre() As WWTSParametroDet
    Get
      If Me.mPardetPadre Is Nothing AndAlso Pardet_Padre > 0 Then
        Me.mPardetPadre = New WWTSParametroDet(OperadorDatos, Parame_Padre, Pardet_Padre)
      End If
      Return Me.mPardetPadre
    End Get
    Set(ByVal value As WWTSParametroDet)
      Me.mPardetPadre = value
      Parame_Padre = value.Parame_Codigo
      Pardet_Padre = value.Pardet_Secuencia
    End Set
  End Property

  Private mPardetHijos As WWTSParametroDetList = Nothing
  Public ReadOnly Property PardetHijos() As WWTSParametroDetList
    Get
      If mPardetHijos Is Nothing Then
        mPardetHijos = WWTSParametroDetList.ObtenerLista(OperadorDatos, Enumerados.EnumParametros.Adjuntosdetalle, WWTSParametroDetList.enumTipoObjeto.Nada, Me)
      End If
      Return mPardetHijos
    End Get
  End Property

  Private mPardetHijosEli As WWTSParametroDetList = Nothing
  Public ReadOnly Property PardetHijosEli() As WWTSParametroDetList
    Get
      If mPardetHijosEli Is Nothing Then
        mPardetHijosEli = New WWTSParametroDetList
      End If
      Return mPardetHijosEli
    End Get
  End Property

  'Public Property CuentaContable1() As CuentaContable
  '  Get
  '    If Me.mCuentaContable1 Is Nothing AndAlso Not CtaCtb_CtaCtble1 = String.Empty Then
  '      Me.mCuentaContable1 = New CuentaContable(OperadorDatos, CtaCtb_CtaCtble1)
  '    End If
  '    Return Me.mCuentaContable1
  '  End Get
  '  Set(ByVal value As CuentaContable)
  '    Me.mCuentaContable1 = value
  '    If value Is Nothing Then
  '      CtaCtb_CtaCtble1 = ""
  '    Else
  '      CtaCtb_CtaCtble1 = value.CtaCtb_Codigo
  '    End If
  '  End Set
  'End Property

  'Public Property CuentaContable2() As CuentaContable
  '  Get
  '    If Me.mCuentaContable2 Is Nothing AndAlso Not CtaCtb_CtaCtble2 = String.Empty Then
  '      Me.mCuentaContable2 = New CuentaContable(OperadorDatos, CtaCtb_CtaCtble2)
  '    End If
  '    Return Me.mCuentaContable2
  '  End Get
  '  Set(ByVal value As CuentaContable)
  '    Me.mCuentaContable2 = value
  '    If value Is Nothing Then
  '      CtaCtb_CtaCtble2 = ""
  '    Else
  '      CtaCtb_CtaCtble2 = value.CtaCtb_Codigo
  '    End If
  '  End Set
  'End Property

  <Infoware.Reportes.CampoReporteAtributo("Descripción", Infoware.Reportes.CampoReporteAtributo.EnumTipoDato.Texto, 250, True)> _
  Public ReadOnly Property Descripcion() As String
    Get
      Return MyBase.Pardet_Descripcion
    End Get
  End Property

  Public ReadOnly Property ArchivoSalidaIcono() As System.Drawing.Icon
    Get
      Try
        Return System.Drawing.Icon.ExtractAssociatedIcon(ArchivoSalida)
      Catch ex As Exception
        Return Nothing
      End Try
    End Get
  End Property
  'Public ReadOnly Property DatoStr1() As String
  '  Get
  '    Return MyBase.Pardet_DatoStr1
  '  End Get
  'End Property

  'Public ReadOnly Property DatoInt1() As String
  '  Get
  '    Return MyBase.Pardet_DatoInt1
  '  End Get
  'End Property

  Public Overrides Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    MyBase.MapearDataRowaObjeto(Fila)
    
    mPardet_DatoStr2 = ""
    Try
      If Not TypeOf Fila("Pardet_DatoStr2") Is DBNull Then
        mPardet_DatoStr2 = CStr(Fila("Pardet_DatoStr2"))
      End If
    Catch ex As Exception
    End Try

    mPardet_DatoStr3 = ""
    Try
      If Not TypeOf Fila("Pardet_DatoStr3") Is DBNull Then
        mPardet_DatoStr3 = CStr(Fila("Pardet_DatoStr3"))
      End If
    Catch ex As Exception
    End Try

    mCtaCtb_CtaCtble1 = ""
    Try
      If Not TypeOf Fila("CtaCtb_CtaCtble1") Is DBNull Then
        mCtaCtb_CtaCtble1 = CStr(Fila("CtaCtb_CtaCtble1"))
      End If
    Catch ex As Exception
    End Try

    mCtaCtb_CtaCtble2 = ""
    Try
      If Not TypeOf Fila("CtaCtb_CtaCtble2") Is DBNull Then
        mCtaCtb_CtaCtble2 = CStr(Fila("CtaCtb_CtaCtble2"))
      End If
    Catch ex As Exception
    End Try

    mPardet_DatoBit1 = False
    Try
      If Not TypeOf Fila("Pardet_DatoBit1") Is DBNull Then
        mPardet_DatoBit1 = CBool(Fila("Pardet_DatoBit1"))
      End If
    Catch ex As Exception
    End Try

    mParametro = Nothing
    mPardetPadre = Nothing
    'mCuentaContable1 = Nothing
    'mCuentaContable2 = Nothing
    mPardetHijos = Nothing
    mPardetHijosEli = Nothing
  End Sub

  Public Overrides Function Recargar() As Boolean
    Dim Result As System.Data.DataTable = New System.Data.DataTable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Parame_Codigo", Parame_Codigo)
    OperadorDatos.AgregarParametro("@Pardet_Secuencia", Pardet_Secuencia)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overrides Function Guardar() As Boolean
    'If Not EsNuevo And Not EsModificado Then
    '  Return True
    'End If
    Dim Result As Integer = 0
    Dim bReturn As Boolean = True
    Dim sAccion As String = "M"
    If EsNuevo Then
      sAccion = "I"
    End If
    OperadorDatos.AgregarParametro("@accion", sAccion)
    OperadorDatos.AgregarParametro("@Parame_Codigo", Parame_Codigo)
    OperadorDatos.AgregarParametro("@Pardet_Secuencia", Pardet_Secuencia)
    OperadorDatos.AgregarParametro("@Pardet_Descripcion", Pardet_Descripcion)
    OperadorDatos.AgregarParametro("@Pardet_DatoStr1", Pardet_DatoStr1)
    OperadorDatos.AgregarParametro("@Pardet_DatoInt1", Pardet_DatoInt1)
    OperadorDatos.AgregarParametro("@Pardet_DatoDec1", Pardet_DatoDec1)
    OperadorDatos.AgregarParametro("@Pardet_Modificable", Pardet_Modificable)

    If Parame_Padre > 0 OrElse Pardet_Padre > 0 Then
      OperadorDatos.AgregarParametro("@Parame_Padre", Parame_Padre)
      OperadorDatos.AgregarParametro("@Pardet_Padre", Pardet_Padre)
    End If
    If Not String.IsNullOrEmpty(CtaCtb_CtaCtble1) Then
      OperadorDatos.AgregarParametro("@CtaCtb_CtaCtble1", CtaCtb_CtaCtble1)
    End If
    If Not String.IsNullOrEmpty(CtaCtb_CtaCtble2) Then
      OperadorDatos.AgregarParametro("@CtaCtb_CtaCtble2", CtaCtb_CtaCtble2)
    End If
    If Not String.IsNullOrEmpty(Pardet_DatoStr2) Then
      OperadorDatos.AgregarParametro("@Pardet_DatoStr2", Pardet_DatoStr2)
    End If
    If Not String.IsNullOrEmpty(Pardet_DatoStr3) Then
      OperadorDatos.AgregarParametro("@Pardet_DatoStr3", Pardet_DatoStr3)
    End If
    If Not String.IsNullOrEmpty(Pardet_Leyenda) Then
      OperadorDatos.AgregarParametro("@Pardet_Leyenda", Pardet_Leyenda)
    End If
    If Not String.IsNullOrEmpty(Pardet_DatoBit1) Then
      OperadorDatos.AgregarParametro("@Pardet_DatoBit1", Pardet_DatoBit1)
    End If
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    If bReturn Then
      If EsNuevo Then
        Pardet_Secuencia = Result
      End If

      If mPardetHijos IsNot Nothing AndAlso mPardetHijos.Count > 0 Then
        For Each _param As WWTSParametroDet In mPardetHijos
          _param.PardetPadre = Me
          _param.Guardar()
        Next
      End If

      If Not EsNuevo AndAlso mPardetHijosEli IsNot Nothing Then
        For Each _param As WWTSParametroDet In mPardetHijosEli
          _param.Eliminar()
        Next
      End If

      EsNuevo = False
      EsModificado = False

      If Cambio_Imagen Then
        Guardar_Imagen()
      End If
    End If
    Return bReturn
  End Function

  Public Overrides Function Guardar_Imagen() As Boolean
    If EsNuevo Then
      Return False
    End If
    If Not Cambio_Imagen Then
      Return True
    End If
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "ps")
    OperadorDatos.AgregarParametro("@Parame_Codigo", Parame_Codigo)
    OperadorDatos.AgregarParametro("@Pardet_Secuencia", Pardet_Secuencia)
    OperadorDatos.AgregarParametroImagen("@Pardet_Imagen", ArchivoImagen)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar()
    OperadorDatos.LimpiarParametros()
    If bReturn Then
      Inicializar_imagen()
    End If
    Return bReturn
  End Function

  Public Overrides Function Eliminar() As Boolean
    If EsNuevo Then
      Return True
    End If
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Parame_Codigo", Parame_Codigo)
    OperadorDatos.AgregarParametro("@Pardet_Secuencia", Pardet_Secuencia)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "ParametroDetList"
Public Class WWTSParametroDetList
  Inherits System.ComponentModel.BindingList(Of WWTSParametroDet)

  Enum enumTipoObjeto
    Nada = -1
    Persona = 0
    Natural = 1
    Juridica = 2
    Sucursal = 3
    Bodega = 4

    UnidadMedida = 5
  End Enum

  Public Shared Function ObtenerLista(ByVal _op As OperadorDatos, ByVal _Parame_Codigo As Enumerados.EnumParametros, Optional ByVal _enumtipoobjeto As enumTipoObjeto = enumTipoObjeto.Nada, Optional ByVal _ParametroDetRel As WWTSParametroDet = Nothing, Optional ByVal _filtro As String = "") As WWTSParametroDetList
    Dim oResult As WWTSParametroDetList = New WWTSParametroDetList
    Dim bReturn As Boolean
    Dim ds As DataTable = Nothing
    With _op
      .AgregarParametro("@Accion", "F")
      .AgregarParametro("@Parame_Codigo", _Parame_Codigo)
      If Not _enumtipoobjeto = enumTipoObjeto.Nada Then
        .AgregarParametro("@TipoPersona", _enumtipoobjeto)
      End If
      If _ParametroDetRel IsNot Nothing Then
        .AgregarParametro("@Parame_Padre", _ParametroDetRel.Parame_Codigo)
        .AgregarParametro("@Pardet_Padre", _ParametroDetRel.Pardet_Secuencia)
      End If
      .AgregarParametro("@filtro", _filtro)
      .Procedimiento = "proc_ParametroDet"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso Not ds Is Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New WWTSParametroDet(_op, _Parame_Codigo, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function
End Class
#End Region
