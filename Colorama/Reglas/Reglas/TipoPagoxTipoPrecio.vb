'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports Infoware.Reglas.General
Imports System.IO


#Region "TipoPagoxTipoPrecio"
Public Class TipoPagoxTipoPrecio

  Const _Procedimiento As String = "proc_TipoPagoxTipoPrecio"

  Private mPardetTipoPago As WWTSParametroDet = Nothing

  Private mPardetTipoPrecio As WWTSParametroDet = Nothing

  Private mSucursal As Sucursal = Nothing

  Public Sub New(ByVal _Sucursal As Sucursal, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _Sucursal.OperadorDatos
    Sucursal = _Sucursal
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _Sucursal As Sucursal, ByVal _PardetTipoPago As WWTSParametroDet)
    Me.New(_Sucursal, False)
    PardetTipoPago = _PardetTipoPago
    If Me.Recargar Then
    Else
      Throw New System.Exception("No se puede cargar objeto TipoPagoxTipoPrecio")
    End If
  End Sub

  'Parametrodet
  Public Overridable Overloads Property PardetTipoPago() As WWTSParametroDet
    Get
      If Me.mPardetTipoPago Is Nothing AndAlso Pardet_TipoPago > 0 Then
        Me.mPardetTipoPago = New WWTSParametroDet(OperadorDatos, Parame_TipoPago, Pardet_TipoPago)
      End If
      Return Me.mPardetTipoPago
    End Get
    Set(ByVal value As WWTSParametroDet)
      Me.mPardetTipoPago = value
      Parame_TipoPago = value.Parame_Codigo
      Pardet_TipoPago = value.Pardet_Secuencia
    End Set
  End Property

  'Parametrodet
  Public Overridable Overloads Property PardetTipoPrecio() As WWTSParametroDet
    Get
      If Me.mPardetTipoPrecio Is Nothing AndAlso Pardet_TipoPrecio > 0 Then
        Me.mPardetTipoPrecio = New WWTSParametroDet(OperadorDatos, Parame_TipoPrecio, Pardet_TipoPrecio)
      End If
      Return Me.mPardetTipoPrecio
    End Get
    Set(ByVal value As WWTSParametroDet)
      Me.mPardetTipoPrecio = value
      Parame_TipoPrecio = value.Parame_Codigo
      Pardet_TipoPrecio = value.Pardet_Secuencia
    End Set
  End Property

  'Sucursal
  Public Overridable Property Sucursal() As Sucursal
    Get
      If Me.mSucursal Is Nothing AndAlso Sucurs_Codigo > 0 Then
        Me.mSucursal = New Sucursal(New Empresa(OperadorDatos, Empres_Codigo), Sucurs_Codigo)
      End If
      Return Me.mSucursal
    End Get
    Set(ByVal value As Sucursal)
      Me.mSucursal = value
      Empres_Codigo = value.Empres_Codigo
      Sucurs_Codigo = value.Sucurs_Codigo
    End Set
  End Property

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Empres_Codigo = CType(Fila("Empres_Codigo"), Integer)
    Sucurs_Codigo = CType(Fila("Sucurs_Codigo"), Integer)
    Parame_TipoPago = CType(Fila("Parame_TipoPago"), Integer)
    Pardet_TipoPago = CType(Fila("Pardet_TipoPago"), Integer)
    Parame_TipoPrecio = CType(Fila("Parame_TipoPrecio"), Integer)
    Pardet_TipoPrecio = CType(Fila("Pardet_TipoPrecio"), Integer)
    mPardetTipoPago = Nothing
    mPardetTipoPrecio = Nothing
    mSucursal = Nothing
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As System.Data.datatable = New System.Data.datatable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Empres_Codigo", Empres_Codigo)
    OperadorDatos.AgregarParametro("@Sucurs_Codigo", Sucurs_Codigo)
    OperadorDatos.AgregarParametro("@Parame_TipoPago", Parame_TipoPago)
    OperadorDatos.AgregarParametro("@Pardet_TipoPago", Pardet_TipoPago)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    Dim Result As Integer = 0
    Dim bReturn As Boolean = True
    Dim sAccion As String = "M"
    If EsNuevo Then
      sAccion = "I"
    End If
    OperadorDatos.AgregarParametro("@accion", sAccion)
    OperadorDatos.AgregarParametro("@Empres_Codigo", Empres_Codigo)
    OperadorDatos.AgregarParametro("@Sucurs_Codigo", Sucurs_Codigo)
    OperadorDatos.AgregarParametro("@Parame_TipoPago", Parame_TipoPago)
    OperadorDatos.AgregarParametro("@Pardet_TipoPago", Pardet_TipoPago)
    OperadorDatos.AgregarParametro("@Parame_TipoPrecio", Parame_TipoPrecio)
    OperadorDatos.AgregarParametro("@Pardet_TipoPrecio", Pardet_TipoPrecio)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    If bReturn Then
      EsNuevo = False
      EsModificado = False
    End If
    Return bReturn
  End Function

  Public Overridable Function Eliminar() As Boolean
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Empres_Codigo", Empres_Codigo)
    OperadorDatos.AgregarParametro("@Sucurs_Codigo", Sucurs_Codigo)
    OperadorDatos.AgregarParametro("@Parame_TipoPago", Parame_TipoPago)
    OperadorDatos.AgregarParametro("@Pardet_TipoPago", Pardet_TipoPago)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "TipoPagoxTipoPrecioList"
Public Class TipoPagoxTipoPrecioList
  Inherits System.ComponentModel.BindingList(Of TipoPagoxTipoPrecio)

  Public Shared Function ObtenerLista(ByVal _Sucursal As Sucursal) As TipoPagoxTipoPrecioList
    Dim oResult As TipoPagoxTipoPrecioList = New TipoPagoxTipoPrecioList
    Dim bReturn As Boolean
    Dim ds As datatable = Nothing
    With _Sucursal.OperadorDatos
      .AgregarParametro("@Accion", "F")
      .AgregarParametro("@Empres_Codigo", _Sucursal.Empres_Codigo)
      .AgregarParametro("@Sucurs_Codigo", _Sucursal.Sucurs_Codigo)
      .Procedimiento = "proc_TipoPagoxTipoPrecio"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso Not ds Is Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New TipoPagoxTipoPrecio(_Sucursal, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function
End Class
#End Region
