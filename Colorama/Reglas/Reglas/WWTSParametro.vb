'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports System.Xml
Imports System.Xml.Serialization


#Region "Parametro"
Public Class WWTSParametro
  Inherits Infoware.Reglas.General.Parametro

  Const _Procedimiento As String = "proc_Parametro"

  Private mParametro As WWTSParametro = Nothing

  Private mParame_LeyendaDatoStr2 As String = ""

  Private mParame_LeyendaDatoStr3 As String = ""

  Private mParame_CtaCtble1 As String = ""

  Private mParame_CtaCtble2 As String = ""

  Private mParame_LeyendaLeyenda As String = ""

  Private mParame_LeyendaDatoBit1 As String = ""

  'Parametro
  Public Shadows Property ParametroPadre() As WWTSParametro
    Get
      If Me.mParametro Is Nothing AndAlso Parame_Padre > 0 Then
        Me.mParametro = New WWTSParametro(OperadorDatos, Parame_Padre)
      End If
      Return Me.mParametro
    End Get
    Set(ByVal value As WWTSParametro)
      Me.mParametro = value
      Parame_Padre = value.Parame_Codigo
    End Set
  End Property

  <XmlAttribute()> _
  Public Overridable Property Parame_LeyendaDatoStr2() As String
    Get
      Return Me.mParame_LeyendaDatoStr2
    End Get
    Set(ByVal value As String)
      Me.mParame_LeyendaDatoStr2 = value
      EsModificado = True
    End Set
  End Property

  <XmlAttribute()> _
  Public Overridable Property Parame_LeyendaDatoStr3() As String
    Get
      Return Me.mParame_LeyendaDatoStr3
    End Get
    Set(ByVal value As String)
      Me.mParame_LeyendaDatoStr3 = value
      EsModificado = True
    End Set
  End Property

  <XmlAttribute()> _
  Public Overridable Property Parame_LeyendaLeyenda() As String
    Get
      Return Me.mParame_LeyendaLeyenda
    End Get
    Set(ByVal value As String)
      Me.mParame_LeyendaLeyenda = value
      EsModificado = True
    End Set
  End Property

  <XmlAttribute()> _
  Public Overridable Property Parame_LeyendaDatoBit1() As String
    Get
      Return Me.mParame_LeyendaDatoBit1
    End Get
    Set(ByVal value As String)
      Me.mParame_LeyendaDatoBit1 = value
      EsModificado = True
    End Set
  End Property

  Public ReadOnly Property TieneDatoStr2() As Boolean
    Get
      Return Not Parame_LeyendaDatoStr2.Trim = String.Empty
    End Get
  End Property

  Public ReadOnly Property TieneDatoStr3() As Boolean
    Get
      Return Not Parame_LeyendaDatoStr3.Trim = String.Empty
    End Get
  End Property

  Public ReadOnly Property TieneDatoLeyenda() As Boolean
    Get
      Return Not Parame_LeyendaLeyenda.Trim = String.Empty
    End Get
  End Property

  Public ReadOnly Property TieneDatoDec1() As Boolean
    Get
      Return Not Parame_LeyendaDatoDec1.Trim = String.Empty
    End Get
  End Property

  Public ReadOnly Property TieneDatoBit1() As Boolean
    Get
      Return Not Parame_LeyendaDatoBit1.Trim = String.Empty
    End Get
  End Property

  <XmlAttribute()> _
  Public Overridable Property Parame_CtaCtble1() As String
    Get
      Return Me.mParame_CtaCtble1
    End Get
    Set(ByVal value As String)
      Me.mParame_CtaCtble1 = value
      EsModificado = True
    End Set
  End Property

  <XmlAttribute()> _
  Public Overridable Property Parame_CtaCtble2() As String
    Get
      Return Me.mParame_CtaCtble2
    End Get
    Set(ByVal value As String)
      Me.mParame_CtaCtble2 = value
      EsModificado = True
    End Set
  End Property

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _OperadorDatos
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Parame_Codigo As Integer)
    Me.New(_OperadorDatos, False)
    Parame_Codigo = _Parame_Codigo
    If Me.Recargar Then
    Else
      Throw New System.Exception("No se puede cargar objeto Parametro")
    End If
  End Sub

  Public ReadOnly Property TieneDatoCtaCtble1() As Boolean
    Get
      Return Not Parame_CtaCtble1.Trim = String.Empty
    End Get
  End Property

  Public ReadOnly Property TieneDatoCtaCtble2() As Boolean
    Get
      Return Not Parame_CtaCtble2.Trim = String.Empty
    End Get
  End Property

  Public Overrides Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    MyBase.MapearDataRowaObjeto(Fila)
    'Parame_Codigo = CType(Fila("Parame_Codigo"), Integer)
    'Parame_Descripcion = CType(Fila("Parame_Descripcion"), String)
    'Parame_Modificable = CType(Fila("Parame_Modificable"), Boolean)
    'Parame_esImagen = CType(Fila("Parame_esImagen"), Boolean)
    'obj = Fila("Parame_LeyendaDatoStr1")
    'If TypeOf obj Is DBNull Then
    '  Parame_LeyendaDatoStr1 = ""
    'Else
    '  Parame_LeyendaDatoStr1 = CType(obj, String)
    'End If
    'obj = Fila("Parame_LeyendaDatoInt1")
    'If TypeOf obj Is DBNull Then
    '  Parame_LeyendaDatoInt1 = ""
    'Else
    '  Parame_LeyendaDatoInt1 = CType(obj, String)
    'End If
    'obj = Fila("Parame_Padre")
    'If TypeOf obj Is DBNull Then
    '  Parame_Padre = 0
    'Else
    '  Parame_Padre = CType(obj, Integer)
    'End If

    Parame_LeyendaDatoStr2 = ""
    Try
      If Not TypeOf Fila("Parame_LeyendaDatoStr2") Is DBNull Then
        Parame_LeyendaDatoStr2 = CStr(Fila("Parame_LeyendaDatoStr2"))
      End If
    Catch ex As Exception
    End Try

    Parame_LeyendaDatoStr3 = ""
    Try
      If Not TypeOf Fila("Parame_LeyendaDatoStr3") Is DBNull Then
        Parame_LeyendaDatoStr3 = CStr(Fila("Parame_LeyendaDatoStr3"))
      End If
    Catch ex As Exception
    End Try

    Parame_LeyendaLeyenda = ""
    Try
      If Not TypeOf Fila("Parame_LeyendaLeyenda") Is DBNull Then
        Parame_LeyendaLeyenda = CStr(Fila("Parame_LeyendaLeyenda"))
      End If
    Catch ex As Exception
    End Try

    Parame_CtaCtble1 = ""
    Try
      If Not TypeOf Fila("Parame_CtaCtble1") Is DBNull Then
        Parame_CtaCtble1 = CStr(Fila("Parame_CtaCtble1"))
      End If
    Catch ex As Exception
    End Try

    Parame_CtaCtble2 = ""
    Try
      If Not TypeOf Fila("Parame_CtaCtble2") Is DBNull Then
        Parame_CtaCtble2 = CStr(Fila("Parame_CtaCtble2"))
      End If
    Catch ex As Exception
    End Try

    Parame_LeyendaDatoBit1 = ""
    Try
      If Not TypeOf Fila("Parame_LeyendaDatoBit1") Is DBNull Then
        Parame_LeyendaDatoBit1 = CStr(Fila("Parame_LeyendaDatoBit1"))
      End If
    Catch ex As Exception
    End Try
  End Sub

  Public Overrides Function Recargar() As Boolean
    Dim Result As System.Data.DataTable = New System.Data.DataTable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Parame_Codigo", Parame_Codigo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  'Public Overridable Function Guardar() As Boolean
  '  Dim Result As Integer = 0
  '  Dim bReturn As Boolean = True
  '  Dim sAccion As String = "M"
  '  If EsNuevo Then
  '    sAccion = "I"
  '  End If
  '  OperadorDatos.AgregarParametro("@accion", sAccion)
  '  OperadorDatos.AgregarParametro("@Parame_Codigo", Parame_Codigo)
  '  OperadorDatos.AgregarParametro("@Parame_Descripcion", Parame_Descripcion)
  '  OperadorDatos.AgregarParametro("@Parame_Modificable", Parame_Modificable)
  '  OperadorDatos.AgregarParametro("@Parame_Padre", Parame_Padre)
  '  OperadorDatos.Procedimiento = _Procedimiento
  '  bReturn = OperadorDatos.Ejecutar(Result)
  '  OperadorDatos.LimpiarParametros()
  '  If bReturn Then
  '    EsNuevo = False
  '    EsModificado = False
  '  End If
  '  Return bReturn
  'End Function

  'Public Overridable Function Eliminar() As Boolean
  '  Dim bReturn As Boolean = True
  '  OperadorDatos.AgregarParametro("@accion", "E")
  '  OperadorDatos.AgregarParametro("@Parame_Codigo", Parame_Codigo)
  '  OperadorDatos.Procedimiento = _Procedimiento
  '  bReturn = OperadorDatos.Ejecutar
  '  OperadorDatos.LimpiarParametros()
  '  Return bReturn
  'End Function
End Class
#End Region

#Region "ParametroList"
Public Class WWTSParametroList
  Inherits System.ComponentModel.BindingList(Of WWTSParametro)

  Public Shared Function ObtenerLista(ByVal _op As OperadorDatos, Optional ByVal _filtro As String = "") As WWTSParametroList
    Dim oResult As WWTSParametroList = New WWTSParametroList
    Dim bReturn As Boolean
    Dim ds As DataTable = Nothing
    With _op
      .AgregarParametro("@Accion", "F")
      .AgregarParametro("@filtro", _filtro)
      .Procedimiento = "proc_Parametro"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso Not ds Is Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New WWTSParametro(_op, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function
End Class
#End Region
